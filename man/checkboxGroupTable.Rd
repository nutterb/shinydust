% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/checkboxGroupTable.R
\name{checkboxGroupTable}
\alias{checkboxGroupTable}
\title{Generate a Table with a Checkbox Group Column}
\usage{
checkboxGroupTable(tbl, inputId, label = "", choices, selected = NULL,
  table_label = "", checkbox_column = 1, pixie = . \%>\% identity(),
  display_table = FALSE)
}
\arguments{
\item{tbl}{An object that inherits \code{data.frame}}

\item{inputId}{A string of length 1, as would be passed to the argument
of the same name in \code{checkboxGroupInput}.}

\item{label}{A character vector of labels to appear next to the check boxes.
Most often, in a tabular display, this function can be served by another
table in the column and \code{label} can be left blank.}

\item{choices}{A vector or list of choices for the check boxes.  This must
have length equal to \code{nrow(tbl)}.}

\item{selected}{A value of the choice to be initially selected.}

\item{table_label}{A character string to be displayed above the table.}

\item{checkbox_column}{The column position at which the check boxes should
be placed.}

\item{pixie}{A chain of \code{sprinkle} for customizing the appearance of the
table.  The chain must start with \code{.} and may take any number of
commands connected by the \code{\%>\%} operator.}

\item{display_table}{Logical.  Defaults to \code{FALSE}, which converts the
  the table into a character string suitable for \code{renderText}. When
  \code{TRUE}, it prints the table to a viewing pane in order to assist the
  user in formatting the table without having to view it in the shiny application.}
}
\description{
The checkbox group table allows for display of tabular information
  with the option to select multiple items for further analysis.
}
\examples{
checkboxGroupTable(tbl = mtcars,
                   inputId = "carChoice",
                   label = rownames(mtcars),
                   choices = paste0("car", 1:nrow(mtcars)),
                   table_label = "Select Vehicles",
                   display_table=TRUE,
                   pixie = . \%>\% sprinkle(bg_pattern_by = "rows"))

\dontrun{
library(shiny)
library(pixiedust)
library(shinydust)

server <- shinyServer(function(input, output) {
  output$table <-
    renderText({
      cbind(rownames(mtcars), mtcars) \%>\%
        checkboxGroupTable(inputId = "chooseCar",
                   label = "",
                   choices = paste0("car", 1:nrow(mtcars)),
                   table_label = "Select a Vehicle",
                   pixie = . \%>\%
                   sprinkle(bg_pattern_by = "rows") \%>\%
                   sprinkle_table(pad = 7) \%>\%
                   sprinkle_colnames("rownames(mtcars)" = "",
                                     control = ""))
   })

output$choice <- renderText(input$chooseCar)
})

ui <- shinyUI(fluidPage(
  wellPanel(
    verbatimTextOutput("choice"),
    uiOutput("table")
  )
))

shinyApp(ui = ui, server = server)
}
}
\author{
Benjamin Nutter
}
\seealso{
\code{\link[pixiedust]{dust}}, \code{\link[pixiedust]{sprinkle}},
  \code{\link[shiny]{checkboxGroupInput}}

  \code{\link{radioTable}}
}

