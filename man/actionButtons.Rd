% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/actionButtons.R, R/downloadButtons.R
\name{actionButtons}
\alias{actionButton_cell}
\alias{actionButton_row}
\alias{actionButtons}
\alias{actionLink_cell}
\alias{downloadLink_cell}
\title{Action Buttons and Links}
\usage{
actionButton_cell(inputId, label, icon = NULL, width = "",
  leftLabel = TRUE, labelButton = TRUE, ...)

actionButton_row(inputId, label, icon = NULL, width = NULL,
  leftLabel = TRUE, labelButton = TRUE, ...)

actionLink_cell(inputId, label, icon = NULL, ...)

downloadLink_cell(inputId, label, icon = NULL, ...)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{The contents of the button or link-usually a text label, but
you could also use any other HTML, like an image.}

\item{icon}{An option \code{\link[shiny]{icon}} to appear on the button.
Currently ignored.}

\item{width}{The width of the input, e.g. \code{'400px'} or \code{'100\%'}.}

\item{leftLabel}{Should the label column be the left column or the right column.
\code{TRUE} puts the label on the left column.  This only takes effect when
\code{labelButton = FALSE}.}

\item{labelButton}{Should the label be placed on the button? If \code{FALSE}, the
label text appears to the side of the button and the button itself is blank.}

\item{...}{Named attributes to be applied to the button or link.  Not yet
  implemented.}
}
\description{
Create action buttons in tabular input panels.
}
\examples{
\dontrun{
options(pixiedust_print_method = "html")

#* Example of Action Buttons
shinyApp(
  ui = shinyUI(
    wellPanel(uiOutput("sampleUI"))
  ),

  server = shinyServer(function(input, output){
    output$sampleUI <-
      renderText({
        actionButton_row(inputId = paste0("car", 1:nrow(mtcars)),
                          label = rownames(mtcars),
                          width = "100px",
                          labelButton = c(TRUE, FALSE)) \%>\%
                          dust() \%>\%
                          print(asis = FALSE)
      })
  })
)

#* Example of Action Links
shinyApp(
  ui = shinyUI(
    wellPanel(uiOutput("sampleUI"))
  ),

  server = shinyServer(function(input, output){
    output$sampleUI <-
      renderText({
        data.frame(
          actionLink =
            actionLink_cell(inputId = paste0("car", 1:nrow(mtcars)),
                            label = rownames(mtcars),
                            width = "100px",
                            labelButton = c(TRUE, FALSE)),
          stringsAsFactors = FALSE) \%>\%
        dust() \%>\%
        print(asis = FALSE)
      })
  })
)
}
}
\author{
Benjamin Nutter
}
\seealso{
\code{\link[shiny]{actionButton}}
}

